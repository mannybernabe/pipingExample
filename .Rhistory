699*.8*1.15-(220)
as.matrix(df)
heatmap(as.matrix(df))
heatmap(as.matrix(df[,-1]))
heatplot(df, lowcol="blue", highcol="red")
install.packages("made4")
plot(cut(as.dendrogram(nfl.hc), h = 5)$lower[[1]])
(.9157*.3)/(.9157*.3+.0843*.8)
(.9157*.1)/(.9157*.1+.0843*.95)
remove(list=ls())
video_url<-"http://youtu.be/UF8uR6Z6KLc"
start_min<-9
start_sec<-12
end_min<-10
end_sec<-12
VIDEO_ID<-gsub("http://youtu.be/", '', video_url)
START_TIME<-start_min*60+start_sec
END_TIME<-end_min*60+end_sec
link<-paste("http://www.youtube.com/v/",VIDEO_ID,"&start=",START_TIME,"&end=",END_TIME,"&version=3",sep="")
print(link, quote=FALSE)
699*0.85*1.15-(220)+100
50.26/(699-104.85)
699*0.85*1.09-(220+80)+100
699*0.85*1.09-(220+80)+100
238*4
1,497.06/18
1497.06/18
library(dplyr)
models %>% group_by(cyl) %>% do(model = lm(mpg ~ wt, data = .))
models %>% summarise(rsq = summary(model)$r.squared)
remove(list=ls())
remove(list=ls())
data(models)
data(mtcars)
models %>% group_by(cyl) %>% do(model = lm(mpg ~ wt, data = .))
mtcars %>% group_by(cyl) %>% do(head(., 1))
mtcars %>% group_by(cyl) %>% do(head(., 2))
mtcars%>% group_by(cyl) %>% do(model = lm(mpg ~ wt, data = .))
mtcars%>% summarise(rsq = summary(model)$r.squared)
mtcars%>% group_by(cyl) %>% do(model = lm(mpg ~ wt, data = .))%>% summarise(rsq = summary(model)$r.squared)
models <- mtcars %>% group_by(cyl) %>% do(model = lm(mpg ~ wt, data = .))
View(models)
mtcars %>% group_by(cyl) %>% do(head(., 2))
cars%>% group_by(cyl) %>%
do(model = lm(mpg ~ wt, data = .))%>%
summarise(rsq = summary(model)$r.squared)
mtcars%>% group_by(cyl) %>%
do(model = lm(mpg ~ wt, data = .))%>%
summarise(rsq = summary(model)$r.squared)
mtcars%>% group_by(cyl) %>%
do(model = lm(mpg ~ wt, data = .))
results<-mtcars %>%
group_by(cyl) %>%
do(lm, formula = mpg ~ wt)
data(iris)
iris.models <- iris %>%
group_by(Species) %>%
do(mod = lm(Sepal.Length ~ Sepal.Width, data = .))
iris %>%
tbl_df %>%
left_join(iris.models) %>%
rowwise %>%
mutate(Sepal.Length_pred = predict(mod,
newdata = list("Sepal.Width" = Sepal.Width)))
iris %>%
tbl_df %>%
left_join(iris.models) %>%
rowwise %>%
mutate(Sepal.Length_pred = predict(mod,
newdata = list("Sepal.Width" = Sepal.Width)))
iris.pred<-iris %>%
tbl_df %>%
left_join(iris.models) %>%
rowwise %>%
mutate(Sepal.Length_pred = predict(mod,
newdata = list("Sepal.Width" = Sepal.Width)))
View(iris.pred)
View(iris.models)
library(reshape2)
mtcars %>%
group_by(cyl) %>%
do(mod = lm(mpg ~ disp, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = coef(.$mod),
cyl = .$cyl)) %>%
dcast(., cyl~var, value.var = "coef")
library(reshape2)
mtcars %>%
group_by(cyl) %>%
do(mod = lm(mpg ~ disp, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = coef(.$mod),
cyl = .$cyl)) %>%
dcast(., cyl~var, value.var = "coef")
mtcars %>%
group_by(cyl) %>%
do(mod = lm(mpg ~ disp, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = coef(.$mod),
cyl = .$cyl))
dcast(., cyl~var, value.var = "coef")
mtcars %>%
group_by(cyl) %>%
do(mod = lm(mpg ~ disp, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = coef(.$mod),
cyl = .$cyl))
mtcars %>%
group_by(cyl) %>%
do(mod = lm(mpg ~ disp, data = .))
mtcars %>%
group_by(cyl) %>%
do(mod = lm(mpg ~ disp, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = coef(.$mod),
cyl = .$cyl))
mtcars %>%
group_by(cyl) %>%
do(mod = lm(mpg ~ disp, data = .)) %>%
do(data.frame(var = names(coef(.$mod)),
coef = coef(.$mod),
cyl = .$cyl)) %>%
dcast(., cyl~var, value.var = "coef")
r round(rfSecondAvg.acc*100,2)
(.0001*.99)/((.0001*.99)+(.9999*.01))
(.0001*.99)/((.0001*.99)+(.9999*.01))*100
(.0001*.99)/((.0001*.99)+(.9999*.01))*100
ans<-(.0001*.99)/((.0001*.99)+(.9999*.01))
(.0001*.99)/((.0001*.99)+(.9999*.01))*100
(.0001*.99)/((.0001*.99)+(.9999*.01))*100
load.packages('quantmod')
library('quantmod')
tickers = sp500.components()$tickers
con = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))
con = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))
source(con)
close(con)
tickers = sp500.components()$tickers
load.packages('quantmod')
tickers = spl('SPY,^VIX')
data <- new.env()
getSymbols(tickers, src = 'yahoo', from = '1980-01-01', env = data, auto.assign = T)
for(i in data$symbolnames) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)
bt.prep(data, align='remove.na', fill.gaps = T)
VIX = Cl(data$VIX)
bt.prep.remove.symbols(data, 'VIX')
tickers = spl('SPY,^VIX')
load.packages('quantmod')
setInternet2(TRUE)
con = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))
source(con)
close(con)
?bt.prep
library(MASS); library(plyr)
Cars93
dlply(Cars93, .(Origin), lm, formula = Horsepower ~ EngineSize)
regressions <- dlply(Cars93, .(Origin), lm, formula = Horsepower ~ EngineSize)
coefs <- ldply(regressions, coef)
View(coefs)
lapply( mtcars[,-1], function(x) summary(lm(mtcars$mpg ~ x)) )
library(dplyr)
glimpse(mutate_each(flights,funs(ntile(.,n=4))))
remove(list=ls())
data(flights)
suppressPackageStartupMessages(library(hflights))
flights <- tbl_df(hflights)
glimpse(mutate_each(flights,funs(ntile(.,n=4))))
glimpse(mutate_each(flights,funs(mean)))
glimpse(mutate_each(flights,funs(mean())))
glimpse(mutate_each(flights,funs(ntile(.,n=4))))
?ntile
?ntile
ntile(1:50,2)
flights %>% group_by(DayOfWeek) %>%
select(Cancelled)
flights %>% group_by(DayOfWeek) %>%
select(Cancelled)%>%
summarise_each(funs(canceled=sum(.,na.rm=TRUE),
total=n(),
percent_cancelled=round(canceled/total*100,1)))
#load packages and data
library(shiny)
library(plotGoogleMaps)
data(meuse)
#convert data frame to SpatialPointDataFrame and set
coordinates(meuse)<-~x+y
proj4string(meuse) <- CRS('+init=epsg:28992')
#will need to select column name for app, maybe not best way to do this,
#but seems to work
formulaText<-paste('zinc')
#plot data on Google map, opens browser and works
mpgPlot <- plotGoogleMaps(meuse, zcol=formulaText)
install.packages("plotGoogleMaps")
#load packages and data
library(shiny)
library(plotGoogleMaps)
data(meuse)
#convert data frame to SpatialPointDataFrame and set
coordinates(meuse)<-~x+y
proj4string(meuse) <- CRS('+init=epsg:28992')
#will need to select column name for app, maybe not best way to do this,
#but seems to work
formulaText<-paste('zinc')
#plot data on Google map, opens browser and works
mpgPlot <- plotGoogleMaps(meuse, zcol=formulaText)
library(shiny)
library(plotGoogleMaps)
data(meuse)
#convert data frame to SpatialPointDataFrame and set
coordinates(meuse)<-~x+y
proj4string(meuse) <- CRS('+init=epsg:28992')
#will need to select column name for app, maybe not best way to do this,
#but seems to work
formulaText<-paste('zinc')
#plot data on Google map, opens browser and works
mpgPlot <- plotGoogleMaps(meuse, zcol=formulaText)
library(leaflet)
install.packages("leaflet")
library(leafletR)
install.packages("leafletR")
library(leafletR)
library(leafletR)
library(leafletR)
data(quakes)
# store data in GeoJSON file (just a subset here)
q.dat <- toGeoJSON(data=quakes[1:99,], dest=tempdir(), name="quakes")
# make style based on quake magnitude
q.style <- styleGrad(prop="mag", breaks=seq(4, 6.5, by=0.5),     style.val=rev(heat.colors(5)), leg="Richter Magnitude", fill.alpha=0.7, rad=8)
# create map
q.map <- leaflet(data=q.dat, dest=tempdir(), title="Fiji Earthquakes", base.map="osm", style=q.style, popup="mag")
# view map in browser
browseURL(q.map)
rstudio::viewer(qmap)
rstudio::viewer(q.map)
View(quakes)
library(shiny)
df <- data.frame(
lat = 0,
lng = 110:120
)
# static version
leaflet() %>% addTiles() %>% addMarkers(data = df, lat = ~lat, lng = ~lng)
library(dplyr)
leaflet() %>% addTiles() %>% addMarkers(data = df, lat = ~lat, lng = ~lng)
library(leaflet)
leaflet()
devtools::install_github("rstudio/leaflet")
library(leaflet)
library(leaflet)
m = leaflet() %>% addTiles()
m  # a map with the default OSM
remove(list=ls())
df <- data.frame(
lat = 0,
lng = 110:120
)
library(leaflet)
m = leaflet() %>% addTiles()
m  # a map with the default OSM
rstudio::viewer(m)
m  # a map with the default OSM
test<-geocode(
c('1035 W. Cullerton, Chicago, IL 60608',
'1460 N Halsted St., Chicago, IL 60642'),
output = 'latlona')
library(ggmap)
test<-geocode(
c('1035 W. Cullerton, Chicago, IL 60608',
'1460 N Halsted St., Chicago, IL 60642'),
output = 'latlona')
qmplot(lon, lat, data = murder,
colour = I('red'), size = I(3), darken = .3)
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3)
View(test)
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3)
?qmplot
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3,zoom=2)
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3,zoom=10)
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3,zoom=18)
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3,zoom=10)
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3,zoom=8)
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3,zoom=3)
qmplot(lon, lat, data = test,
colour = I('red'), size = I(3), darken = .3,zoom=5)
test<-geocode(
c('1035 W. Cullerton, Chicago, IL 60608',
'1460 N Halsted St., Chicago, IL 60642'),
output = 'latlona')
View(test)
map <- get_googlemap('houston', markers = df, path = df, scale = 2)
ggmap(map, extent = 'device'
map <- get_googlemap('houston', markers = df, path = df, scale = 2)
df <- round(data.frame(
x = jitter(rep(-95.36, 50), amount = .3),
y = jitter(rep( 29.76, 50), amount = .3)
), digits = 2)
map <- get_googlemap('houston', markers = df, path = df, scale = 2)
map <- get_googlemap('houston', markers = df, path = df, scale = 2)
ggmap(map, extent = 'device')
<- get_googlemap('houston', markers = df, path = df, scale = 2)
map
map
ggmap(map)
, extent = 'device'
ggmap(map, extent = 'device')
View(df)
map <- get_googlemap('houston', markers = df, scale = 2)
ggmap(map, extent = 'device')
View(df)
?get_googlemap
map <- get_googlemap('houston', scale = 2)
ggmap(map, extent = 'device')
map <- get_googlemap('chicago', scale = 2)
ggmap(map, extent = 'device')
test
data.frame(x=test[,1],y=test[,2])
markers<-data.frame(x=test[,1],y=test[,2])
map <- get_googlemap('chicago',makers=markers scale = 2)
map <- get_googlemap('chicago',makers=markers, scale = 2)
ggmap(map, extent = 'device')
View(markers)
View(test)
View(markers)
View(df)
View(markers)
View(df)
View(markers)
View(df)
View(markers)
View(df)
View(markers)
df2<-data.frame(x=test[,1],y=test[,2])
map <- get_googlemap('chicago',makers=df2, scale = 2)
ggmap(map, extent = 'device')
map <- get_googlemap('chicago',makers=df2, scale = 2,maptype = "watercolor")
ggmap(map, extent = 'device')
map <- get_googlemap('chicago',makers=df2, scale = 2,maptype = "watercolor")
ggmap(map, extent = 'device')
?get_googlemap
map <- get_googlemap('chicago',makers=df2, scale = 2,maptype = "hybrid")
ggmap(map, extent = 'device')
map <- get_googlemap('chicago',makers=df2, scale = 2,maptype = "roadmap")
ggmap(map, extent = 'device')
?ggmap
ggmap(map)
p <- p + geom_point(data = df2, aes(x = x, y = y,size = 7))
p <- ggmap(map)
p <- p + geom_point(data = df2, aes(x = x, y = y,size = 7))
p
p <- ggmap(map,extent = "device")
p <- p + geom_point(data = df2, aes(x = x, y = y,size = 7))
p
p <- ggmap(map,extent = "normal")
p <- p + geom_point(data = df2, aes(x = x, y = y,size = 7))
p
p <- ggmap(map,extent = "device")
p <- p + geom_point(data = df2, aes(x = x, y = y,size = 7))
p
setwd("~/Documents/GTD/R Piping")
library(dplyr)
library(nycflights13)
data(flights)
test1.df<-filter(filter(arrange(summarise(group_by(flights,dest),avg=mean(dep_delay,na.rm = T),
n = n()),desc(avg)),n>500),row_number() <= 10)
df<-group_by(flights,dest)
df<-summarise(df,avg=mean(dep_delay,na.rm = T), n = n())
df<-arrange(df,desc(avg))
df<-filter(df,n>500)
df<-filter(df,row_number() <= 10)
test2.df<-df
test3.df<-flights%>%
group_by(dest)%>%
summarise(avg=mean(dep_delay,na.rm = T), n = n())%>%
arrange(desc(avg))%>%
filter(n>500)%>%
filter(row_number() <= 10)
flights%>%
filter(Month==3)%>%
group_by(UniqueCarrier)%>%
summarise(avgArrivalDelay=mean(ArrDelay,na.rm = T),noFlights=n())%>%
filter(noFlights>100)%>%
arrange(desc(avgArrivalDelay))%>%
filter(row_number() <= 3)
test1.df<-filter(filter(arrange(summarise(group_by(flights,dest),avg=mean(dep_delay,na.rm = T),
n = n()),desc(avg)),n>500),row_number() <= 10)
filter(filter(arrange(summarise(group_by(flights,dest),avg=mean(dep_delay,na.rm = T),
n = n()),desc(avg)),n>500),row_number() <= 10)
df<-group_by(flights,dest)
df<-summarise(df,avg=mean(dep_delay,na.rm = T), n = n())
df<-arrange(df,desc(avg))
df<-filter(df,n>500)
df<-filter(df,row_number() <= 10)
test2.df<-df
test2.df
flights%>%
filter(Month==3)%>%
group_by(UniqueCarrier)%>%
summarise(avgArrivalDelay=mean(ArrDelay,na.rm = T),noFlights=n())%>%
filter(noFlights>100)%>%
arrange(desc(avgArrivalDelay))%>%
filter(row_number() <= 3)
flights%>%
filter(Month==3)
flights
flights%>%
filter(month==3)%>%
group_by(UniqueCarrier)%>%
summarise(avgArrivalDelay=mean(ArrDelay,na.rm = T),noFlights=n())%>%
filter(noFlights>100)%>%
arrange(desc(avgArrivalDelay))%>%
filter(row_number() <= 3)
flights%>%
group_by(dest)%>%
summarise(avg=mean(dep_delay,na.rm = T), n = n())%>%
arrange(desc(avg))%>%
filter(n>500)%>%
filter(row_number() <= 10)
data(flights)
remove(list=ls())
library(nycflights13)
data(flights)
data(flights)
glimpse(flights)
View(flights)
?nycflights13
View(flights)
View(flights)
unique(flights$day)
flights%>%
filter(dest=="ORD")
flights%>%
filter(dest=="ORD",day==1)
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(avgDepartDelay=mean(dep_delay),numFlights=n())
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(avgDepartDelay=mean(dep_delay,na.rm=T),numFlights=n())
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(avgDepartDelay=mean(dep_delay,na.rm=T),numFlights=n())
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(numFlights=n())
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(numFlights=n())%>%
arrange(numFlights)
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(numFlights=n())%>%
arrange(desc(numFlights))
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(numFlights=n())%>%
arrange(desc(numFlights))
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(numFlights=n())%>%
arrange(desc(numFlights))
group_by(filter(data=flights,dest=="ORD",day==1),carrier)
group_by(filter(flights,dest=="ORD",day==1),carrier)
summarize(group_by(filter(flights,dest=="ORD",day==1),carrier),numFlights=n())
arrange(summarize(group_by(filter(flights,dest=="ORD",day==1),carrier),numFlights=n()),desc(numFlights))
df<-filter(flights,dest=="ORD",day==1)
df<-filter(flights,dest=="ORD",day==1)
df<-filter(flights,dest=="ORD",day==1)
df<-group_by(df,carrier)%>%
df<-summarise(df,numFlights=n())%>%
df<-arrange(df,desc(numFlights))
df
df<-filter(flights,dest=="ORD",day==1)
df<-group_by(df,carrier)%>%
df<-filter(flights,dest=="ORD",day==1)
df<-group_by(df,carrier)
df<-summarise(df,numFlights=n())
df<-arrange(df,desc(numFlights))
df
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(numFlights=n())%>%
arrange(desc(numFlights))
arrange(summarize(group_by(filter(flights,dest=="ORD",day==1),carrier),numFlights=n()),desc(numFlights))
df<-filter(flights,dest=="ORD",day==1)
df<-group_by(df,carrier)
df<-summarise(df,numFlights=n())
df<-arrange(df,desc(numFlights))
df
flights%>%
filter(dest=="ORD",day==1)%>%
group_by(carrier)%>%
summarise(numFlights=n())%>%
arrange(desc(numFlights))
glimpse(flights)
source.with.encoding('~/Documents/GTD/Braintree Code Challenge/BlackEagle.Rmd', encoding='UTF-8')
